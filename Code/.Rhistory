library(here, dplyr, stringr, lubridate)
library(here)
library(here, dplyr)
library(here, dplyr, stringr)
library(here, dplyr, stringr, lubridate)
library(here, dplyr, stringr, lubridate)
library(lubridate)
library(here, dplyr, stringr, lubridate)
library(here, dplyr, stringr, lubridate)
knitr::opts_chunk$set(echo = TRUE)
folder <- here("Code/example_raw_data")
#Sampling effort data for Arbutus unedo (second fruiting season)
sampling_effort <- read.csv(file.path(folder, "sampling_effort.csv"))
#Species level
eff_sp_level <- sum(sampling_effort$num_days)
#Individual level
eff_ind_level <- sampling_effort %>%
group_by(Plant_ID) %>%
summarise(effort_ind = sum(num_days))
sampling_effort
library(here)
library(dplyr)
library(stringr)
library(lubridate)
#Individual level
eff_ind_level <- sampling_effort %>%
group_by(Plant_ID) %>%
summarise(effort_ind = sum(num_days))
#Revision level (and TimestampIssues)
eff_rev <- data.frame(sampling_effort %>%
group_by (Plant_ID, rev) %>%
summarise(effort_rev = sum(num_days),
n_cam = n(),
ID = str_c(Plant_ID, rev, sep="_" ))) %>%
select(ID, n_cam, effort_rev)
Aune_data <-  read.csv(file.path(folder, "example_dataset.csv"))
#Summary list of file metadata extracted from Hard drive files
file_info <- read.csv(file.path(folder, "file_info.csv"))  %>%
select(Path, duration)
#join data and file list
Aune_dat <- Aune_data %>%
left_join(file_info, by = "Path")
Aune_dat_effort <- Aune_dat %>%
mutate(ID = str_c(Plant_ID, Revision, sep = "_"),
effort_sp_level = eff_sp_level) %>%
left_join(eff_ind_level, by = "Plant_ID") %>%
left_join(eff_rev, by = "ID") %>%
distinct()
coord <- read.csv(file.path(folder, "coordinates.csv"))
Aune_dat_coord <- Aune_dat_effort %>%
left_join(coord, by = "Plant_ID")
Aune_eating <- Aune_dat_coord %>%
filter(Behaviour == "eating"| Behaviour == "probably eating" | Behaviour == "searching for food")
# Rows with only one species  - 2,576 row
rows_wo_sp2 <- Aune_eating %>%
filter(is.na(Sp2) | nchar(Sp2) == 0) %>%
mutate(Coexistence = FALSE)
# Rows with two species: change Sp2 to Sp1 - 62 rows (Duplicate rows based on Sp2 and Behaviour2 conditions)
new_rows_for_sp2 <- Aune_eating %>%
filter(!is.na(Sp2) & nchar(Sp2) > 0 & Behaviour2 %in% c("eating", "probably eating", "searching for food")) %>%
mutate(Sp1 = Sp2,
Count1 = Count2,
Behaviour = Behaviour2,
Coexistence = TRUE)
# Combine the original data with the duplicated rows should be 2,638 rows
Aune_split <- bind_rows(rows_wo_sp2 , new_rows_for_sp2) %>%
select(!c (Sp2, Count2, Behaviour2))
#Remove unknown species and correct some inconsistent names for Sp1
df1 <- Aune_split %>%
filter( Sp1 != "?",
Sp1 != "") %>%
mutate( Sp1 = str_to_sentence(Sp1))
#Rectify inconsistent names resulting from manual typing during the visualization process.
df1$Sp1 [df1$Sp1 == "Fr" ] <- "Fringilla coelebs"
df1$Sp1 [df1$Sp1 == "Turdus me" ] <- "Turdus merula"
df1$Sp1 [df1$Sp1 == "Sylvia melanocephala" ] <- "Curruca melanocephala"
Aune_collapsed <- df1 %>%
group_by(Plant_ID, Revision) %>%
mutate(interval = as.POSIXct(round(as.numeric(as.POSIXct(DateTime)) / (60*5)) * (60*5), origin="1970-01-01")) %>%
group_by(interval, Sp1) %>%
summarize(
n = n(),
PlantSp = "Arbutus unedo",
Plant_ID = first(Plant_ID),
File = paste(File, collapse=', '),
Count = max(Count1),
DateTime = first(as.POSIXct(DateTime)),
Behaviour = paste(Behaviour, collapse=', '),
Coexistence = first(Coexistence),
N_cam = first(n_cam),
EffortRev = first(effort_rev),
EffortSpecies = first(effort_sp_level),
EffortInd = first(effort_ind),
duration = sum(as.numeric(duration)),
long = first(Long),
lat = first(Lat),
Revision_ID = first(Revision),
Deployment_ID = first(Deployment_ID),
ID = first(ID),
TimestampIssue = first(TI)
) %>%
rename(AnimalSpecies = Sp1) %>%
data.frame()
Aune_collapsed <- df1 %>%
group_by(Plant_ID, Revision) %>%
mutate(interval = as.POSIXct(round(as.numeric(as.POSIXct(DateTime)) / (60*5)) * (60*5), origin="1970-01-01")) %>%
group_by(interval, Sp1) %>%
summarize(
n = n(),
PlantSp = "Arbutus unedo",
Plant_ID = first(Plant_ID),
File = paste(File, collapse=', '),
Count = max(Count1),
DateTime = first(as.POSIXct(DateTime)),
Behaviour = paste(Behaviour, collapse=', '),
Coexistence = first(Coexistence),
N_cam = first(n_cam),
EffortRev = first(effort_rev),
EffortSpecies = first(effort_sp_level),
EffortInd = first(effort_ind),
duration = sum(as.numeric(duration)),
long = first(Long),
lat = first(Lat),
Revision_ID = first(Revision),
Deployment_ID = first(Deployment_ID),
ID = first(ID)
) %>%
rename(AnimalSpecies = Sp1) %>%
data.frame()
# -Rule for Behavior (If there are more than one behavior in a collapsed event we choose the alternative according to the following order: 1. eating > 2. prob. eating > 3. searching for food)
df2 <- Aune_collapsed %>%
mutate(Behav = Behaviour,
Behav = str_replace_all(Behav, "probably eating", "b"),
Behav = str_replace_all(Behav, "eating", "a"),
Behav = str_replace_all(Behav, "searching for food", "c"),
Behav = ifelse(grepl("a",Behav), "eating",Behav),
Behav = ifelse(grepl("b",Behav), "probably eating",Behav),
Behav = ifelse(grepl("c",Behav), "searching for food",Behav)) %>%
select(-Behaviour) %>%
rename(Behaviour = Behav)
# Unify decimal numbers
df3 <- df2 %>%
mutate(duration = round(as.numeric(duration), 1),
EffortRev = round(as.numeric(EffortRev), 2),
EffortInd = round(as.numeric(EffortInd), 2),
EffortSpecies = round(as.numeric(EffortSpecies), 2),
long = round(as.numeric(long), 5),
lat  = round(as.numeric(lat), 5))
# Create SpeciesType column and final selection.
df4 <- df3 %>%
mutate(SpeciesType = ifelse(grepl("Cervus|Sus|Meles|Vulpes|Genetta|Herpestes", AnimalSpecies, ignore.case = TRUE), "Mammal", "Bird")) %>%
select(PlantSp, Plant_ID, AnimalSpecies, DateTime, Behaviour, Coexistence, N_cam, EffortRev, EffortSpecies, EffortInd, duration, long, lat, SpeciesType)
df4
?nchar
new_rows_for_sp1 <- Aune_eating %>%
filter(!is.na(Sp2) & nchar(Sp2) > 0 & Behaviour1 %in% c("eating", "probably eating", "searching for food"))
library(here)
library(dplyr)
library(stringr)
library(lubridate)
knitr::opts_chunk$set(echo = TRUE)
folder <- here("Code/example_raw_data")
#Sampling effort data for Arbutus unedo (second fruiting season)
sampling_effort <- read.csv(file.path(folder, "sampling_effort.csv"))
#Species level
eff_sp_level <- sum(sampling_effort$num_days)
#Individual level
eff_ind_level <- sampling_effort %>%
group_by(Plant_ID) %>%
summarise(effort_ind = sum(num_days))
#Revision level (and TimestampIssues)
eff_rev <- data.frame(sampling_effort %>%
group_by (Plant_ID, rev) %>%
summarise(effort_rev = sum(num_days),
n_cam = n(),
ID = str_c(Plant_ID, rev, sep="_" ))) %>%
select(ID, n_cam, effort_rev)
Aune_data <-  read.csv(file.path(folder, "example_dataset.csv"))
## 2. Include video duration                            - 10,827 rows
```{r }
#Summary list of file metadata extracted from Hard drive files
file_info <- read.csv(file.path(folder, "file_info.csv"))  %>%
select(Path, duration)
#join data and file list
Aune_dat <- Aune_data %>%
left_join(file_info, by = "Path")
#join data and file list
Aune_dat <- Aune_data %>%
left_join(file_info, by = "Path")
## 3. Include sampling effort                           - 10,827 rows
```{r }
Aune_dat_effort <- Aune_dat %>%
mutate(ID = str_c(Plant_ID, Revision, sep = "_"),
effort_sp_level = eff_sp_level) %>%
left_join(eff_ind_level, by = "Plant_ID") %>%
left_join(eff_rev, by = "ID") %>%
distinct()
```
## 4. Include coordinates                               - 10,827 rows
```{r }
coord <- read.csv(file.path(folder, "coordinates.csv"))
Aune_dat_coord <- Aune_dat_effort %>%
left_join(coord, by = "Plant_ID")
Aune_dat_coord <- Aune_dat_effort %>%
left_join(coord, by = "Plant_ID")
## 5. Filter eating behaviours                          - 2,662 rows
```{r }
Aune_eating <- Aune_dat_coord %>%
filter(Behaviour == "eating"| Behaviour == "probably eating" | Behaviour == "searching for food")
```
## 6. Split entries with two species                    - 2,638 rows
We will duplicate the entries where there are two species (SP2 = "non empty") and rename Sp1 with Sp2 name. The rest of the columns will maintain invariable (traceable through Plant_ID/Rev/File). A new column "Coexistence" will be created for searching events with more than one species.
```{r }
# Videos containing one species alone  - 2,576 row
rows_wo_sp2 <- Aune_eating %>%
filter(is.na(Sp2) | nchar(Sp2) == 0) %>%
mutate(Coexistence = FALSE)
# Videos containing two different species: here we change Sp2 to Sp1 - 62 rows (Duplicate rows based on Sp2 and Behaviour2 conditions)
new_rows_for_sp2 <- Aune_eating %>%
filter(!is.na(Sp2) & nchar(Sp2) > 0 & Behaviour2 %in% c("eating", "probably eating", "searching for food")) %>%
mutate(Sp1 = Sp2,
Count1 = Count2,
Behaviour = Behaviour2,
Coexistence = TRUE)
new_rows_for_sp1 <- Aune_eating %>%
filter(!is.na(Sp2) & nchar(Sp2) > 0 & Behaviour1 %in% c("eating", "probably eating", "searching for food"))
# Videos containing one species alone  - 2,576 row
rows_wo_sp2 <- Aune_eating %>%
filter(is.na(Sp2) | nchar(Sp2) == 0) %>%
mutate(Coexistence = FALSE)
# Videos containing two different species: here we change Sp2 to Sp1 - 62 rows (Duplicate rows based on Sp2 and Behaviour2 conditions)
new_rows_for_sp2 <- Aune_eating %>%
filter(!is.na(Sp2) & nchar(Sp2) > 0 & Behaviour2 %in% c("eating", "probably eating", "searching for food")) %>%
mutate(Sp1 = Sp2,
Count1 = Count2,
Behaviour = Behaviour2,
Coexistence = TRUE)
new_rows_for_sp1 <- Aune_eating %>%
filter(!is.na(Sp2) & nchar(Sp2) > 0 & Behaviour %in% c("eating", "probably eating", "searching for food"))
new_rows_for_sp1
# Combine the original data with the duplicated rows should be 2,638 rows
Aune_split <- bind_rows(rows_wo_sp2 , new_rows_for_sp2, new_rows_for_sp1) %>%
select(!c (Sp2, Count2, Behaviour2))
Aune_split
#Remove unknown species and correct some inconsistent names for Sp1
df1 <- Aune_split %>%
filter( Sp1 != "?",
Sp1 != "") %>%
mutate( Sp1 = str_to_sentence(Sp1))
#Rectify inconsistent names resulting from manual typing during the visualization process.
df1$Sp1 [df1$Sp1 == "Fr" ] <- "Fringilla coelebs"
df1$Sp1 [df1$Sp1 == "Turdus me" ] <- "Turdus merula"
df1$Sp1 [df1$Sp1 == "Sylvia melanocephala" ] <- "Curruca melanocephala"
df1
sort(unique(df1$Sp1))
df1
Aune_collapsed <- df1 %>%
group_by(Plant_ID, Revision) %>%
mutate(interval = as.POSIXct(round(as.numeric(as.POSIXct(DateTime)) / (60*5)) * (60*5), origin="1970-01-01")) %>%
group_by(interval, Sp1) %>%
summarize(
n = n(),
PlantSp = "Arbutus unedo",
Plant_ID = first(Plant_ID),
File = paste(File, collapse=', '),
Count = max(Count1),
DateTime = first(as.POSIXct(DateTime)),
Behaviour = paste(Behaviour, collapse=', '),
Coexistence = first(Coexistence),
N_cam = first(n_cam),
EffortRev = first(effort_rev),
EffortSpecies = first(effort_sp_level),
EffortInd = first(effort_ind),
duration = sum(as.numeric(duration)),
long = first(Long),
lat = first(Lat),
Revision_ID = first(Revision),
Deployment_ID = first(Deployment_ID),
ID = first(ID)
) %>%
rename(AnimalSpecies = Sp1) %>%
data.frame()
Aune_collapsed
# -Rule for Behavior (If there are more than one behavior in a collapsed event we choose the alternative according to the following order: 1. eating > 2. prob. eating > 3. searching for food)
df2 <- Aune_collapsed %>%
mutate(Behav = Behaviour,
Behav = str_replace_all(Behav, "probably eating", "b"),
Behav = str_replace_all(Behav, "eating", "a"),
Behav = str_replace_all(Behav, "searching for food", "c"),
Behav = ifelse(grepl("a",Behav), "eating",Behav),
Behav = ifelse(grepl("b",Behav), "probably eating",Behav),
Behav = ifelse(grepl("c",Behav), "searching for food",Behav)) %>%
select(-Behaviour) %>%
rename(Behaviour = Behav)
# Unify decimal numbers
df3 <- df2 %>%
mutate(duration = round(as.numeric(duration), 1),
EffortRev = round(as.numeric(EffortRev), 2),
EffortInd = round(as.numeric(EffortInd), 2),
EffortSpecies = round(as.numeric(EffortSpecies), 2),
long = round(as.numeric(long), 5),
lat  = round(as.numeric(lat), 5))
# Create SpeciesType column and final selection.
df4 <- df3 %>%
mutate(SpeciesType = ifelse(grepl("Cervus|Sus|Meles|Vulpes|Genetta|Herpestes", AnimalSpecies, ignore.case = TRUE), "Mammal", "Bird")) %>%
select(PlantSp, Plant_ID, AnimalSpecies, DateTime, Behaviour, Coexistence, N_cam, EffortRev, EffortSpecies, EffortInd, duration, long, lat, SpeciesType)
df4
sort(unqiue(df4$PlantSp))
sort(unique(df4$PlantSp))
sort(unique(df4$))
sort(unique(df4$Plant_ID))
sort(unique(df4$AnimalSpecies))
sort(unique(df4$Behaviour))
sort(unique(df4$Coexistence))
count(df4$Coexistence == TRUE)
sum(df4$Coexistence == TRUE)
df4$Coexistence == TRUE
sum(df4$Coexistence)
df4$Coexistence
df4 %>%
group_by(Coexistence)%>%
summarise(n =n())
# Videos containing one species alone  - 2,576 row
rows_wo_sp2 <- Aune_eating %>%
filter(is.na(Sp2) | nchar(Sp2) == 0) %>%
mutate(Coexistence = FALSE)
# Videos containing two different species: here we change Sp2 to Sp1 - 62 rows (Duplicate rows based on Sp2 and Behaviour2 conditions)
new_rows_for_sp2 <- Aune_eating %>%
filter(!is.na(Sp2) & nchar(Sp2) > 0 & Behaviour2 %in% c("eating", "probably eating", "searching for food")) %>%
mutate(Sp1 = Sp2,
Count1 = Count2,
Behaviour = Behaviour2,
Coexistence = TRUE)
new_rows_for_sp1 <- Aune_eating %>%
filter(!is.na(Sp2) & nchar(Sp2) > 0 & Behaviour %in% c("eating", "probably eating", "searching for food")) %>%
mutate(Coexistence = TRUE)
# Combine the original data with the duplicated rows should be 2,638 rows
Aune_split <- bind_rows(rows_wo_sp2 , new_rows_for_sp2, new_rows_for_sp1) %>%
select(!c (Sp2, Count2, Behaviour2))
# Combine the original data with the duplicated rows should be 2,638 rows
Aune_split <- bind_rows(rows_wo_sp2 , new_rows_for_sp2, new_rows_for_sp1) %>%
select(!c (Sp2, Count2, Behaviour2))
## 7. Remove unknown species and correct inconsitencies - 2,712 rows
```{r}
#Remove unknown species and correct some inconsistent names for Sp1
df1 <- Aune_split %>%
filter( Sp1 != "?",
Sp1 != "") %>%
mutate( Sp1 = str_to_sentence(Sp1))
#Rectify inconsistent names resulting from manual typing during the visualization process.
df1$Sp1 [df1$Sp1 == "Fr" ] <- "Fringilla coelebs"
df1$Sp1 [df1$Sp1 == "Turdus me" ] <- "Turdus merula"
df1$Sp1 [df1$Sp1 == "Sylvia melanocephala" ] <- "Curruca melanocephala"
Aune_collapsed <- df1 %>%
group_by(Plant_ID, Revision) %>%
mutate(interval = as.POSIXct(round(as.numeric(as.POSIXct(DateTime)) / (60*5)) * (60*5), origin="1970-01-01")) %>%
group_by(interval, Sp1) %>%
summarize(
n = n(),
PlantSp = "Arbutus unedo",
Plant_ID = first(Plant_ID),
File = paste(File, collapse=', '),
Count = max(Count1),
DateTime = first(as.POSIXct(DateTime)),
Behaviour = paste(Behaviour, collapse=', '),
Coexistence = first(Coexistence),
N_cam = first(n_cam),
EffortRev = first(effort_rev),
EffortSpecies = first(effort_sp_level),
EffortInd = first(effort_ind),
duration = sum(as.numeric(duration)),
long = first(Long),
lat = first(Lat),
Revision_ID = first(Revision),
Deployment_ID = first(Deployment_ID),
ID = first(ID)
) %>%
rename(AnimalSpecies = Sp1) %>%
data.frame()
# -Rule for Behavior (If there are more than one behavior in a collapsed event we choose the alternative according to the following order: 1. eating > 2. prob. eating > 3. searching for food)
df2 <- Aune_collapsed %>%
mutate(Behav = Behaviour,
Behav = str_replace_all(Behav, "probably eating", "b"),
Behav = str_replace_all(Behav, "eating", "a"),
Behav = str_replace_all(Behav, "searching for food", "c"),
Behav = ifelse(grepl("a",Behav), "eating",Behav),
Behav = ifelse(grepl("b",Behav), "probably eating",Behav),
Behav = ifelse(grepl("c",Behav), "searching for food",Behav)) %>%
select(-Behaviour) %>%
rename(Behaviour = Behav)
# Unify decimal numbers
df3 <- df2 %>%
mutate(duration = round(as.numeric(duration), 1),
EffortRev = round(as.numeric(EffortRev), 2),
EffortInd = round(as.numeric(EffortInd), 2),
EffortSpecies = round(as.numeric(EffortSpecies), 2),
long = round(as.numeric(long), 5),
lat  = round(as.numeric(lat), 5))
# Create SpeciesType column and final selection.
df4 <- df3 %>%
mutate(SpeciesType = ifelse(grepl("Cervus|Sus|Meles|Vulpes|Genetta|Herpestes", AnimalSpecies, ignore.case = TRUE), "Mammal", "Bird")) %>%
select(PlantSp, Plant_ID, AnimalSpecies, DateTime, Behaviour, Coexistence, N_cam, EffortRev, EffortSpecies, EffortInd, duration, long, lat, SpeciesType)
df4 %>%
group_by(Coexistence)%>%
summarise(n =n())
rows_wo_sp2
new_rows_for_sp1
new_rows_for_sp2
2576 + 86 + 62
df1
Aune_split
#Remove unknown species and correct some inconsistent names for Sp1
df1 <- Aune_split %>%
filter( Sp1 != "?",
Sp1 != "") %>%
mutate( Sp1 = str_to_sentence(Sp1))
#Rectify inconsistent names resulting from manual typing during the visualization process.
df1$Sp1 [df1$Sp1 == "Fr" ] <- "Fringilla coelebs"
df1$Sp1 [df1$Sp1 == "Turdus me" ] <- "Turdus merula"
df1$Sp1 [df1$Sp1 == "Sylvia melanocephala" ] <- "Curruca melanocephala"
df1
Aune_collapsed <- df1 %>%
group_by(Plant_ID, Revision) %>%
mutate(interval = as.POSIXct(round(as.numeric(as.POSIXct(DateTime)) / (60*5)) * (60*5), origin="1970-01-01")) %>%
group_by(interval, Sp1) %>%
summarize(
n = n(),
PlantSp = "Arbutus unedo",
Plant_ID = first(Plant_ID),
File = paste(File, collapse=', '),
Count = max(Count1),
DateTime = first(as.POSIXct(DateTime)),
Behaviour = paste(Behaviour, collapse=', '),
Coexistence = first(Coexistence),
N_cam = first(n_cam),
EffortRev = first(effort_rev),
EffortSpecies = first(effort_sp_level),
EffortInd = first(effort_ind),
duration = sum(as.numeric(duration)),
long = first(Long),
lat = first(Lat),
Revision_ID = first(Revision),
Deployment_ID = first(Deployment_ID),
ID = first(ID)
) %>%
rename(AnimalSpecies = Sp1) %>%
data.frame()
Aune_collapsed
# -Rule for Behavior (If there are more than one behavior in a collapsed event we choose the alternative according to the following order: 1. eating > 2. prob. eating > 3. searching for food)
df2 <- Aune_collapsed %>%
mutate(Behav = Behaviour,
Behav = str_replace_all(Behav, "probably eating", "b"),
Behav = str_replace_all(Behav, "eating", "a"),
Behav = str_replace_all(Behav, "searching for food", "c"),
Behav = ifelse(grepl("a",Behav), "eating",Behav),
Behav = ifelse(grepl("b",Behav), "probably eating",Behav),
Behav = ifelse(grepl("c",Behav), "searching for food",Behav)) %>%
select(-Behaviour) %>%
rename(Behaviour = Behav)
# Unify decimal numbers
df3 <- df2 %>%
mutate(duration = round(as.numeric(duration), 1),
EffortRev = round(as.numeric(EffortRev), 2),
EffortInd = round(as.numeric(EffortInd), 2),
EffortSpecies = round(as.numeric(EffortSpecies), 2),
long = round(as.numeric(long), 5),
lat  = round(as.numeric(lat), 5))
# Create SpeciesType column and final selection.
df4 <- df3 %>%
mutate(SpeciesType = ifelse(grepl("Cervus|Sus|Meles|Vulpes|Genetta|Herpestes", AnimalSpecies, ignore.case = TRUE), "Mammal", "Bird")) %>%
select(PlantSp, Plant_ID, AnimalSpecies, DateTime, Behaviour, Coexistence, N_cam, EffortRev, EffortSpecies, EffortInd, duration, long, lat, SpeciesType)
df4 %>%
group_by(Coexistence)%>%
summarise(n =n())
df2
sort(unique(df4$Count))
sort(unique(df4$Count))
unique(df4$Count)
df4$Count
df4
sort(unique(df4$N_cam))
df4
df4 %>%
group_by(SpeciesType)%>%
summarise(n =n())
df4 %>%
group_by(AnimalSpecies)%>%
summarise(n =n())
df4 %>%
group_by(AnimalSpecies, SpeciesType)%>%
summarise(n =n())
df4 %>%
group_by(AnimalSpecies)%>%
summarise(n =n())
df4 %>%
filter(SpeciesType == "Mammal") %>%
group_by(AnimalSpecies)%>%
summarise(n =n())
df4 %>%
filter(SpeciesType == "Mammal") %>%
group_by(AnimalSpecies,  Behaviour)%>%
summarise(n =n())
df4
max(df4$duration)
range(df4$duration)
df4
View(df4)
